user.home = ${HOME}

logback.xml = """
    <configuration>
        <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
            <target>System.out</target>
            <encoder>
                <pattern>%X{akkaTimestamp} %-5level[%thread] %logger{0} - %msg%n</pattern>
            </encoder>
        </appender>

        <root level="debug">
            <appender-ref ref="STDOUT"/>
        </root>
    </configuration>
"""

kafka {
  topics {
    messages.name = "canary-messages"
  }
  bootstrap-servers = [
    "kafka-1.canaryapp.dev",
    "kafka-2.canaryapp.dev",
    "kafka-3.canaryapp.dev",
  ]

  consumer-settings {
    discovery-method = akka.discovery
    service-name = ""
    resolve-timeout = 3 seconds
    poll-interval = 10ms
    poll-timeout = 50ms
    stop-timeout = 30s
    close-timeout = 20s
    commit-timeout = 15s
    commit-time-warning = 1s
    commit-refresh-interval = infinite
    use-dispatcher = "akka.kafka.default-dispatcher"

    kafka-clients {
      enable.auto.commit = false
      connections.max.idle.ms = 60000
      auto.commit.interval.ms = 5000
      request.timeout.ms = 50000
      session.timeout.ms = 30000
      max.poll.records = 5000
    }

    wait-close-partition = 500ms
    position-timeout = 5s
    offset-for-times-timeout = 5s
    metadata-request-timeout = 5s
    eos-draining-check-interval = 30ms
    partition-handler-warning = 5s
    connection-checker {
      enable = true
      max-retries = 3
      check-interval = 15s
      backoff-factor = 2.0
    }
  }

  producer-settings {
    discovery-method = akka.discovery
    service-name = ""
    resolve-timeout = 3 seconds
    parallelism = 10000
    close-timeout = 60s
    close-on-producer-stop = false
    use-dispatcher = "akka.kafka.default-dispatcher"
    eos-commit-interval = 100ms

    kafka-clients {
      acks = "-1"
      retries = 3
      linger.ms = 20
      batch.size = 16384
      buffer.memory = 33554432
      compression.type = "gzip"
    }
  }
}

akka {
  actor {
    allow-java-serialization = on
  }
  coordinated-shutdown {
    exit-jvm = on
    terminate-actor-system = on
    run-by-jvm-shutdown-hook = on
    run-by-actor-system-terminate = on
  }
}

kamon {

}
